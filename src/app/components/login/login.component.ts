import { Component, inject, ChangeDetectorRef } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';

@Component({
  selector: 'app-login',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css'],
})
export class LoginComponent {

  private cdRef = inject(ChangeDetectorRef);


  username = '';
  password = '';
  errorMessage = '';
  loading = false;

  private http = inject(HttpClient);
  private router = inject(Router);

  resetForm() {
    this.username = '';
    this.password = '';
    this.errorMessage = '';
  }

  onSubmit(): void {
    this.loading = true;
    this.errorMessage = '';
    console.log('üü° ‡πÄ‡∏£‡∏¥‡πà‡∏° login');

    const loginData = {
      username: this.username,
      password: this.password
    };

    this.http.post('https://localhost:7089/api/auth/login', loginData).subscribe({
      next: (res: any) => {
        this.loading = false;
        this.cdRef.detectChanges(); // ‚¨ÖÔ∏è ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ UI ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤ loading ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß

        if (res?.success !== true) {
          this.loading = false;
          this.cdRef.detectChanges(); // ‚¨ÖÔ∏è ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ UI ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤ loading ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß
          this.errorMessage = res.message || '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á';
          return;
        }

        const status = (res.statusCode || '').toUpperCase();

        if (status !== 'U000') {
          this.errorMessage = '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏£‡∏∞‡∏ö‡∏ö (' + status + ')';
          this.resetForm();
          return;
        }

        // console.log('üéâ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');

        sessionStorage.setItem('token', res.token);
        sessionStorage.setItem('username', res.userId);
        sessionStorage.setItem('fullname', res.fullName);
        sessionStorage.setItem('brCode', res.brCode);

        if (res.role === '99') {
          sessionStorage.setItem('brName', res.brName);
          this.router.navigate(['/dashboard-admin/']);
        } else if (res.role === '89') {
          this.router.navigate(['/head-office/']);
        } else {
          this.errorMessage = '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏£‡∏∞‡∏ö‡∏ö';
        }
      },
      error: (err: HttpErrorResponse) => {
        // console.error('‚ùå HTTP Error:', err);
        if (err) {
          alert('‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö');
          this.loading = false;
          this.cdRef.detectChanges(); // ‚¨ÖÔ∏è ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ UI ‡∏£‡∏π‡πâ
        }
        

        if (err.status === 401) {
          this.errorMessage = err.error?.message || '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á';
        } else {
          this.errorMessage = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå';
        }
      }
    });
  }

}
