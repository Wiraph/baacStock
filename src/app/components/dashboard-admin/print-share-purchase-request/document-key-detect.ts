import { Component, ChangeDetectorRef, NgZone, ChangeDetectionStrategy } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';
import { DocumentApiService, UploadTemplateResponse, GenerateDocResponse } from './document-key-api.service';
import { getLabelForKey } from './document-key-label';

@Component({
  selector: 'app-document-key-detect',
  standalone: true,
  imports: [CommonModule, FormsModule],
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: `
    <style>
      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
    </style>
    
    <!-- üìã ‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ - ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏° -->
    <div class="w-full max-w-4xl mx-auto space-y-6 mt-8">
      <div class="bg-white shadow-md rounded-lg border border-gray-200">
        <div class="bg-blue-500 text-white text-center text-xl font-bold py-3 rounded-t-lg">
          üìã ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
        </div>
        
        <!-- Progress Steps -->
        <div style="display: flex; align-items: center; justify-content: center; padding: 24px; background: #f9fafb;">
          <div style="display: flex; align-items: center;">
            <div [style.background]="currentStep >= 1 ? '#3b82f6' : '#e5e7eb'" 
                 [style.color]="currentStep >= 1 ? 'white' : '#6b7280'"
                 style="border-radius: 50%; width: 40px; height: 40px; display: flex; align-items: center; justify-content: center; font-weight: bold; font-size: 18px; transition: all 0.5s ease;">
              <div *ngIf="currentStep === 1 && isUploading" style="width: 20px; height: 20px; border: 2px solid #ffffff; border-top: 2px solid transparent; border-radius: 50%; animation: spin 1s linear infinite;"></div>
              <span *ngIf="currentStep > 1">‚úì</span>
              <span *ngIf="currentStep < 1">1</span>
            </div>
            <span [style.color]="currentStep >= 1 ? '#2563eb' : '#6b7280'" 
                  style="margin: 0 8px; font-weight: 500; transition: all 0.5s ease;">
              <span *ngIf="currentStep === 1 && isUploading">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î...</span>
              <span *ngIf="currentStep !== 1 || !isUploading">‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</span>
            </span>
          </div>
          
          <div [style.background]="currentStep >= 2 ? '#3b82f6' : '#e5e7eb'" 
               style="width: 32px; height: 4px; margin: 0 8px; transition: all 0.5s ease;"></div>
          
          <div style="display: flex; align-items: center;">
            <div [style.background]="currentStep >= 2 ? '#3b82f6' : '#e5e7eb'" 
                 [style.color]="currentStep >= 2 ? 'white' : '#6b7280'"
                 style="border-radius: 50%; width: 40px; height: 40px; display: flex; align-items: center; justify-content: center; font-weight: bold; font-size: 18px; transition: all 0.5s ease;">
              <div *ngIf="currentStep === 2 && isGenerating" style="width: 20px; height: 20px; border: 2px solid #ffffff; border-top: 2px solid transparent; border-radius: 50%; animation: spin 1s linear infinite;"></div>
              <span *ngIf="currentStep > 2">‚úì</span>
              <span *ngIf="currentStep < 2">2</span>
            </div>
            <span [style.color]="currentStep >= 2 ? '#2563eb' : '#6b7280'" 
                  style="margin: 0 8px; font-weight: 500; transition: all 0.5s ease;">
              <span *ngIf="currentStep === 2 && isGenerating">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£...</span>
              <span *ngIf="currentStep !== 2 || !isGenerating">‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</span>
            </span>
          </div>
          
          <div [style.background]="currentStep === 3 ? '#3b82f6' : '#e5e7eb'" 
               style="width: 32px; height: 4px; margin: 0 8px; transition: all 0.5s ease;"></div>
          
          <div style="display: flex; align-items: center;">
            <div [style.background]="currentStep === 3 ? '#3b82f6' : '#e5e7eb'" 
                 [style.color]="currentStep === 3 ? 'white' : '#6b7280'"
                 style="border-radius: 50%; width: 40px; height: 40px; display: flex; align-items: center; justify-content: center; font-weight: bold; font-size: 18px; transition: all 0.5s ease;">
              <span *ngIf="currentStep === 3">‚úì</span>
              <span *ngIf="currentStep < 3">3</span>
            </div>
            <span [style.color]="currentStep === 3 ? '#2563eb' : '#6b7280'" 
                  style="margin: 0 8px; font-weight: 500; transition: all 0.5s ease;">‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î</span>
          </div>
        </div>

        <!-- Upload Form -->
        <div class="p-6 bg-gray-50 rounded-b-lg">
          <h2 class="text-xl font-bold mb-4 text-center text-gray-800">‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ (.docx)</h2>
          
          <div class="max-w-md mx-auto">
            <div class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-blue-400 transition-colors"
                 (click)="fileInput.click()"
                 (dragover)="onDragOver($event)"
                 (dragleave)="onDragLeave($event)"
                 (drop)="onDrop($event)">
              <div class="text-gray-500 mb-4">
                <svg class="mx-auto h-12 w-12" stroke="currentColor" fill="none" viewBox="0 0 24 24">
                  <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  <polyline points="14,2 14,8 20,8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  <line x1="16" y1="13" x2="8" y2="13" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  <line x1="16" y1="17" x2="8" y2="17" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  <polyline points="10,9 9,9 8,9" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </div>
              <p class="text-sm text-gray-600 mb-2">‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå ‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏≤‡∏ß‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà</p>
              <p class="text-xs text-gray-500">‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå .docx ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô</p>
              <input #fileInput type="file" accept=".docx" class="hidden" (change)="onFileSelected($event)">
              <button type="button" class="mt-4 bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded transition-colors">
                ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå
              </button>
            </div>
            
            <!-- File Info (‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡πâ‡∏ß) -->
            <div *ngIf="selectedFile" class="mt-4 p-3 bg-green-50 border border-green-200 rounded-lg">
              <div class="flex items-center">
                <svg class="h-5 w-5 text-green-500 mr-2" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                </svg>
                <span class="text-sm text-green-700">‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: {{ selectedFile.name }}</span>
              </div>
            </div>
            
            <!-- Upload Button -->
            <button type="button" 
                    (click)="onUpload()"
                    [disabled]="!selectedFile || isUploading"
                    style="width: 100%; margin-top: 1rem; background: #10b981; color: white; font-weight: 600; padding: 12px 16px; border-radius: 8px; border: none; cursor: pointer; transition: all 0.3s ease;"
                    [style.background]="(!selectedFile || isUploading) ? '#ccc' : '#10b981'"
                    [style.cursor]="(!selectedFile || isUploading) ? 'not-allowed' : 'pointer'">
              
              <!-- Loading Spinner -->
              <div *ngIf="isUploading" style="display: flex; align-items: center; justify-content: center; gap: 10px;">
                <div style="width: 18px; height: 18px; border: 2px solid #ffffff; border-top: 2px solid transparent; border-radius: 50%; animation: spin 1s linear infinite;"></div>
                <span>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î...</span>
              </div>
              
              <!-- Normal State -->
              <span *ngIf="!isUploading">üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</span>
            </button>
            
            <!-- Status Messages -->
            <div style="margin-top: 1rem; text-align: center;">
              <div *ngIf="uploadError" style="padding: 10px; background: #ffebee; border: 1px solid #f44336; border-radius: 5px; color: #d32f2f; margin-bottom: 10px;">
                ‚ùå {{ uploadError }}
              </div>
              <div *ngIf="uploadSuccess" style="padding: 10px; background: #e8f5e8; border: 1px solid #4caf50; border-radius: 5px; color: #2e7d32;">
                ‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö {{ detectedKeys.length }} ‡∏ä‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- üìù ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏° -->
    <div *ngIf="uploadSuccess && detectedKeys.length > 0" 
         style="background: white; border: 2px solid green; padding: 20px; margin: 20px 0; border-radius: 8px; position: relative; z-index: 9999; width: 100%;">
        
        <h2 style="text-align: center; color: green; font-size: 24px; margin-bottom: 20px;">
          üìù ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
        </h2>
        
        <!-- ‡πÅ‡∏™‡∏î‡∏á key ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö -->
        <div style="background: lightblue; padding: 15px; margin-bottom: 20px; border-radius: 5px;">
          <strong>‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö {{ detectedKeys.length }} ‡∏ä‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:</strong>
          <div style="margin-top: 10px;">
            <span *ngFor="let key of detectedKeys; let i = index" 
                  style="display: inline-block; background: white; padding: 5px 10px; margin: 2px; border-radius: 3px;">
              {{ getLabelForKey(key) }}
            </span>
          </div>
        </div>

        <!-- ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• -->
        <form (ngSubmit)="onSubmitForm()" style="max-width: 1200px; margin: 0 auto;">
          <div style="display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 20px;">
            <div *ngFor="let key of detectedKeys" style="margin-bottom: 15px;">
              <label [for]="key" style="display: block; margin-bottom: 5px; font-weight: bold; color: #333;">
                {{ getLabelForKey(key) }} <span style="color: red;">*</span>
              </label>
              <input 
                [id]="key"
                type="text" 
                [(ngModel)]="formData[key]"
                [name]="key"
                style="width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 5px; font-size: 14px;"
                [placeholder]="'‡∏Å‡∏£‡∏≠‡∏Å ' + getLabelForKey(key)"
                required>
            </div>
          </div>

          <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ -->
          <div style="text-align: center; margin-top: 30px;">
            <button 
              type="submit"
              [disabled]="isGenerating"
              style="background: green; color: white; padding: 15px 30px; border: none; border-radius: 5px; font-size: 16px; cursor: pointer; transition: all 0.3s ease;"
              [style.background]="isGenerating ? '#ccc' : 'green'"
              [style.cursor]="isGenerating ? 'not-allowed' : 'pointer'">
              
              <!-- Loading Spinner -->
              <div *ngIf="isGenerating" style="display: flex; align-items: center; justify-content: center; gap: 10px;">
                <div style="width: 20px; height: 20px; border: 2px solid #ffffff; border-top: 2px solid transparent; border-radius: 50%; animation: spin 1s linear infinite;"></div>
                <span>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£...</span>
              </div>
              
              <!-- Normal State -->
              <span *ngIf="!isGenerating">üìÑ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</span>
            </button>
            
            <!-- Error Message -->
            <div *ngIf="generateError" style="margin-top: 15px; padding: 10px; background: #ffebee; border: 1px solid #f44336; border-radius: 5px; color: #d32f2f;">
              ‚ùå {{ generateError }}
            </div>
            
            <!-- Success Message -->
            <div *ngIf="generateSuccess" style="margin-top: 15px; padding: 15px; background: #e8f5e8; border: 1px solid #4caf50; border-radius: 5px; color: #2e7d32; text-align: center;">
              <div style="font-size: 18px; font-weight: bold; margin-bottom: 10px;">
                üéâ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!
              </div>
              <div style="font-size: 14px;">
                ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠: {{ generatedDate }}
              </div>
            </div>
          </div>
        </form>

      <!-- PDF Preview -->
      <div *ngIf="generateSuccess && generatedPdfSafeUrl" style="width: 100%; height: 800px; border: 1px solid #ddd; margin: 20px 0;">
        <iframe 
          [src]="generatedPdfSafeUrl" 
          style="width: 100%; height: 100%; border: none;"
          title="PDF Preview">
        </iframe>
      </div>

      <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î -->
      <div *ngIf="generateSuccess" style="display: flex; gap: 20px; justify-content: center; flex-wrap: wrap; margin: 20px 0;">
        <button 
          (click)="downloadDocx()"
          style="background: #2196F3; color: white; padding: 15px 25px; border: none; border-radius: 5px; font-size: 16px; cursor: pointer;">
          ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î DOCX
        </button>
        
        <button 
          (click)="downloadPdf()"
          [disabled]="!generatedPdfUrl || typeof generatedPdfUrl !== 'string'"
          style="background: #FF0000; color: white; padding: 15px 25px; border: none; border-radius: 5px; font-size: 16px; cursor: pointer; opacity: 1;"
          [style.background]="(!generatedPdfUrl || typeof generatedPdfUrl !== 'string') ? '#ccc' : '#FF0000'"
          [style.cursor]="(!generatedPdfUrl || typeof generatedPdfUrl !== 'string') ? 'not-allowed' : 'pointer'">
          ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF
        </button>
      </div>
    </div>
  `
})
export class DocumentKeyDetectComponent {
  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  selectedFile: File | null = null;
  
  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
  isUploading = false;
  uploadError = '';
  uploadSuccess = false;
  
  // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (1=‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î, 2=‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•, 3=‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î)
  currentStep = 1;
  
  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API
  templateId: string = '';
  detectedKeys: string[] = [];
  formData: { [key: string]: string } = {};
  
  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
  isGenerating = false;
  generateError = '';
  generateSuccess = false;
  submitted = false;
  
  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Step 3 (‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î)
  generatedFileSize: string = '';
  generatedDate: string = '';
  generatedDocxUrl: string = '';
  generatedPdfUrl: SafeResourceUrl | string = '';
  generatedPdfSafeUrl: SafeResourceUrl | null = null;
  
  constructor(
    private documentApiService: DocumentApiService,
    private cdr: ChangeDetectorRef,
    private ngZone: NgZone,
    private sanitizer: DomSanitizer
  ) {}
  
  // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏≤‡∏Å key-label ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏õ‡∏•‡∏á key ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ
  getLabelForKey = getLabelForKey;
  
  /**
   * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
   * 
   * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤:
   * - ‡∏ó‡∏∏‡∏Å key ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
   * - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á
   * 
   * @returns true ‡∏ñ‡πâ‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á, false ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
   * 
   * ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:
   * if (this.isFormValid()) {
   *   // ‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
   * } else {
   *   // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
   * }
   */
  isFormValid(): boolean {
    return this.detectedKeys.every(key => this.formData[key] && this.formData[key].trim() !== '');
  }

  /**
   * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å input
   * 
   * ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:
   * 1. ‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å input element
   * 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
   * 3. ‡πÄ‡∏ã‡πá‡∏ï‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
   * 4. ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error ‡πÅ‡∏•‡∏∞ success
   * 
   * @param event - Event ‡∏à‡∏≤‡∏Å input file
   * 
   * ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:
   * <input type="file" (change)="onFileSelected($event)">
   */
  onFileSelected(event: Event) {
    const input = event.target as HTMLInputElement;
    if (input.files && input.files.length > 0) {
      this.selectedFile = input.files[0];
      this.uploadError = '';
      this.uploadSuccess = false;
    }
  }

  /**
   * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏≤‡∏ß‡∏≤‡∏á (dragover)
   * 
   * ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á browser
   * ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏≤‡∏ß‡∏≤‡∏á‡πÑ‡∏î‡πâ
   * 
   * @param event - DragEvent
   */
  onDragOver(event: DragEvent) {
    event.preventDefault();
    event.stopPropagation();
  }

  /**
   * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (dragleave)
   * 
   * ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á browser
   * 
   * @param event - DragEvent
   */
  onDragLeave(event: DragEvent) {
    event.preventDefault();
    event.stopPropagation();
  }

  /**
   * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå (drop)
   * 
   * ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:
   * 1. ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á browser
   * 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏•‡∏≤‡∏Å‡∏°‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
   * 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô .docx)
   * 4. ‡πÄ‡∏ã‡πá‡∏ï‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error
   * 
   * @param event - DragEvent
   * 
   * ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:
   * <div (drop)="onDrop($event)">‡∏ß‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà</div>
   */
  onDrop(event: DragEvent) {
    event.preventDefault();
    event.stopPropagation();
    
    if (event.dataTransfer?.files && event.dataTransfer.files.length > 0) {
      const file = event.dataTransfer.files[0];
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå .docx ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (file.type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' || 
          file.name.endsWith('.docx')) {
        this.selectedFile = file;
        this.uploadError = '';
        this.uploadSuccess = false;
      } else {
        this.uploadError = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå .docx ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô';
      }
    }
  }

  /**
   * ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á backend
   * 
   * ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:
   * 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
   * 2. ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
   * 3. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API uploadTemplate
   * 4. ‡∏£‡∏±‡∏ö template_id ‡πÅ‡∏•‡∏∞ keys ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö
   * 5. ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2
   * 6. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤
   * 
   * ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:
   * <button (click)="onUpload()">‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î</button>
   */
  onUpload() {
    if (!this.selectedFile) return;
    
    this.isUploading = true;
    this.uploadError = '';
    this.uploadSuccess = false;
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏à‡∏£‡∏¥‡∏á
    this.documentApiService.uploadTemplate(this.selectedFile).subscribe({
      next: (response: UploadTemplateResponse) => {
        console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö', response.keys.length, '‡∏ä‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
        
        // ‡πÉ‡∏ä‡πâ ngZone.run() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ change detection ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
        this.ngZone.run(() => {
          // ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô
          this.templateId = response.template_id;
          this.detectedKeys = [...response.keys]; // ‡∏™‡∏£‡πâ‡∏≤‡∏á array ‡πÉ‡∏´‡∏°‡πà
          this.uploadSuccess = true;
          this.currentStep = 2;
          this.isUploading = false;
          
          // ‡∏™‡∏£‡πâ‡∏≤‡∏á form data object ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞ key
          this.formData = {}; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï form data
          this.detectedKeys.forEach(key => {
            this.formData[key] = '';
          });
          
          // Force change detection
          this.cdr.detectChanges();
          
          // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å DOM ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
          setTimeout(() => {
            this.ngZone.run(() => {
              this.cdr.detectChanges();
            });
          }, 100);
        });
      },
      error: (error) => {
        console.error('‚ùå ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
        this.uploadError = error.error?.error || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î';
        this.isUploading = false;
      }
    });
  }
  
  /**
   * ‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
   * 
   * ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:
   * 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ template_id ‡πÅ‡∏•‡∏∞ keys ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
   * 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
   * 3. ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
   * 4. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API generateDocument
   * 5. ‡∏£‡∏±‡∏ö URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå
   * 6. ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3
   * 7. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤
   * 
   * ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:
   * <form (ngSubmit)="onSubmitForm()">
   *   <button type="submit">‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</button>
   * </form>
   */
  onSubmitForm() {
    this.submitted = true;
    
    if (!this.templateId || this.detectedKeys.length === 0) return;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    if (!this.isFormValid()) {
      return;
    }
    
    this.isGenerating = true;
    this.generateError = '';
    this.generateSuccess = false;
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
    this.documentApiService.generateDocument(this.templateId, this.formData).subscribe({
      next: (response: GenerateDocResponse) => {
        console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
        
        // ‡πÉ‡∏ä‡πâ ngZone.run() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ change detection ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
        this.ngZone.run(() => {
          this.generateSuccess = true;
          this.currentStep = 3;
          this.isGenerating = false;
          
          // ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Step 3
          this.generatedDate = new Date().toLocaleString('th-TH');
          this.generatedFileSize = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì...';
          this.generatedDocxUrl = this.documentApiService.getDocxUrl(response);
          const pdfUrl = this.documentApiService.getPdfUrl(response);
          this.generatedPdfUrl = pdfUrl || '';
          
          // ‡πÄ‡∏ã‡πá‡∏ï PDF Safe URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö iframe
          if (pdfUrl) {
            this.generatedPdfSafeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(pdfUrl);
          }
          
          // Force change detection
          this.cdr.detectChanges();
          
          // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å DOM ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
          setTimeout(() => {
            this.ngZone.run(() => {
              this.cdr.detectChanges();
            });
          }, 200);
        });
      },
      error: (error) => {
        console.error('‚ùå ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
        this.generateError = error.error?.error || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£';
        this.isGenerating = false;
      }
    });
  }
  
  /**
   * ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå DOCX
   * 
   * ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ downloadFile ‡∏à‡∏≤‡∏Å DocumentApiService
   * ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå DOCX ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô
   * 
   * ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:
   * <button (click)="downloadDocx()">‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î DOCX</button>
   */
  downloadDocx() {
    if (this.generatedDocxUrl) {
      this.documentApiService.downloadFile(this.generatedDocxUrl, 'generated_document.docx');
    }
  }
  
  /**
   * ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå PDF
   * 
   * ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå PDF ‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡πÉ‡∏´‡∏°‡πà
   * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ URL ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô string ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
   * 
   * ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:
   * <button (click)="downloadPdf()">‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF</button>
   */
  downloadPdf() {
    if (this.generatedPdfUrl && typeof this.generatedPdfUrl === 'string') {
      // ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡πÉ‡∏´‡∏°‡πà
      window.open(this.generatedPdfUrl, '_blank');
    }
  }
  

} 